// 寄存器个数
#REGISTER
//32bit,	64bit,	128bit,	256bit,
  64,		0,		0,		0,

// 寄存器别名
#REG-ALIAS
//alias,	register,
rj,			r50,
cr,			r52,
sp,			r53,
irp,		r54,
rp,			r55,
iv0,		r56,
iv1,		r57,
iv2,		r58,
iv3,		r59,
iv4,		r60,
iv5,		r61,
iv6,		r62,
iv7,		r63,

// 指令模板
#TEMPLATE
//id,		word,		OPCODE,		T1,		T2,		DST,		RD1,		RD2,	example,
0,			1,			w0 23+9,	w0 22,	w0 21,	w0 14+7,	w0 7+7,		w0 0+7,	add,
1,			2,			w0 23+9,	w0 22,	w0 21,	w0 14+7,	w1 0+32, 	,		lc,
2,			1,			w0 23+9,	w0 22,	w0 21,	w0 14+7,	w0 0+14, 	,		lcs,
3,			1,			w0 23+9,	w0 22,	,		,			w0 7+7, 	,		jmp,
4,			1,			w0 23+9,	,		,		w0 0+23,	,		 	,		hlt,

// 指令
#INSTRUCTION
//template,	name,		dst,	rd1,			rd2,				code,			cost,
// 程序控制
0,			nop,		,		,       		,					b000000000,		,
4,			hlt,		num,	,       		,					b000000010,		,
1,			lc,			reg32,	num|var,   		,					b000000001,		,
2,			lcs,		reg32,	num|var,   		,					b000101110,		,
3,			jmp,		,		reg32,			,					b000100000,		,
3,			call,		,		reg32,			,					b000100001,		,
0,			cjmpe,		reg32,	reg32|num,		reg32|num,			b000111000,		,
0,			cjmpne,		reg32,	reg32|num,		reg32|num,			b000110100,		,
0,			cjmpsg,		reg32,	reg32|num,		reg32|num,			b000110001,		,
0,			cjmpsge,	reg32,	reg32|num,		reg32|num,			b000111001,		,
0,			cjmpug,		reg32,	reg32|num,		reg32|num,			b000110010,		,
0,			cjmpuge,	reg32,	reg32|num,		reg32|num,			b000111010,		,
// DATA_BUS
0,			lw,			reg32,	reg32|num,		,					b000001000,		,
0,			sw,			,		reg32,			reg32|num,			b000001100,		,
0,			ls,			reg32,	reg32|num,		,					b000001011,		,
0,			ss,			,      	reg32,			reg32|num,			b000001110,		,
0,			lub,		reg32,	reg32|num,		,					b000001010,		,
// 代数运算
0,			add,		reg32,	reg32|num,		reg32|num,			b000010000,		,
0,			sub,		reg32,	reg32|num,		reg32|num,			b000010001,		,
0,			abs,		reg32,	reg32|num,		,					b000010011,		,
0,			min,		reg32,	reg32|num,		reg32|num,			b000101101,		,
0,			max,		reg32,	reg32|num,		reg32|num,			b000101111,		,
0,			mul32,		reg32,	reg32,			reg32,				b000101100,		,
0,			divs,		reg32,	reg32|num,		reg32|num,			b000010101,		,
0,			modu,		reg32,	reg32|num,		reg32|num,			b000010110,		,
0,			mods,		reg32,	reg32|num,		reg32|num,			b000010111,		,
// 位运算	
0,			and,		reg32,	reg32|num,		reg32|num,			b000011000,		,
0,			or,			reg32,	reg32|num,		reg32|num,			b000011001,		,
0,			xor,		reg32,	reg32|num,		reg32|num,			b000011010,		,
0,			sl,			reg32,	reg32|num,		reg32|num,			b000011100,		,
0,			sru,		reg32,	reg32|num,		reg32|num,			b000011110,		,
0,			srs,		reg32,	reg32|num,		reg32|num,			b000011111,		,
// 
0,			sqrt,		reg32,	reg32|num,		,					b000011011,		,
0,			log2f32,	reg32,	reg32|num,		,					b000101000,		,
0,			log2m8p24,	reg32,	reg32|num,		,					b000101001,		,
0,			expf32,		reg32,	reg32|num,		,					b000101010,		,
0,			expm16p16,	reg32,	reg32|num,		,					b000101011,		,

// 指令别名
#INSTRUCTION-ALIAS
// usage,				inst-1,					inst-2,				inst-3,				inst-4,				inst-5,				inst-6,				inst-7,
cjmpul a b c,			cjmpug a c b,			,					,					,					,					,					,
cjmpule a b c,			cjmpuge a c b,			,					,					,					,					,					,
cjmpsl a b c,			cjmpsg a c b,			,					,					,					,					,					,
cjmpsle a b c,			cjmpsge a c b,			,					,					,					,					,					,
hlt,					hlt 0,					,					,					,					,					,					,
mov a b,				add a b 0,				,					,					,					,					,					,
neg dst rd2,			sub dst 0 rd2,			,					,					,					,					,					,
not dst rd1,			xor dst rd1 -1,			,					,					,					,					,					,
ret,					jmp rp,					,					,					,					,					,					,
inc dst rd2,			add dst dst rd2,		,					,					,					,					,					,
iret,					jmp irp,				,					,					,					,					,					,
expm6p10 dst rd1, 		srs rd1 rd1 2, 			expm16p16 dst rd1, 	sl dst dst 10,		,					,					,					,
expm6p10 dst, 			srs dst dst 2, 			expm16p16 dst dst, 	sl dst dst 10,		,					,					,					,
int_to_m6p10 dst,		sl dst dst 10,			,					,					,					,					,					,
int_to_m6p10 dst rd1,	sl dst rd1 10,			,					,					,					,					,					,
int_to_m16p16 dst,		sl dst dst 16,			,					,					,					,					,					,
int_to_m16p16 dst rd1,	sl dst rd1 16,			,					,					,					,					,					,
m6p10_to_m16p16 dst,		srs dst dst 5,		,					,					,					,					,					,
m6p10_to_m16p16 dst rd1,	srs dst rd1 5,		,					,					,					,					,					,
m16p16_to_m6p10 dst,		sl dst dst 10,		,					,					,					,					,					,
m16p16_to_m6p10 dst rd1,	sl dst rd1 10,		,					,					,					,					,					,
m11p21_to_m6p10 dst,		sl dst dst 5,		,					,					,					,					,					,
m11p21_to_m6p10 dst rd1,	sl dst rd1 5,		,					,					,					,					,					,
jmp var,				lc rj var,				jmp rj,				,					,					,					,					,
call var,				lc rj var,				call var,			,					,					,					,					,

// 调试器配置
#DEBUGER-CONFIG
// name,				value,
CPU_REG_BASE_ADDR,		0x09010000,
STS_REG_DBG_ADDR,		0x0901ff1c,
CURRENT_IP,				0x0901ff00,
CTL_REG_DBG_ADDR,		0x0901ff0c,
CTL_REG_STEP_ADDR,		0x0901ff14,
HALT_CMD_ADDR,			0x0901ff04,
UNHALT_CMD_ADDR,		0x0901ff08,
CTL_REG_RFRSH_ADDR,		0x0901ff20,
CTL_REG_CONT_ADDR,		0x0901ff18,
BREAK_POINT_SN,			0x01800000,
IIC_ENDIAN,				little,